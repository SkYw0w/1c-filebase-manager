#!/usr/bin/env oscript
// Скрипт для получения списка информационных баз через cpdb

#Использовать cpdb
#Использовать fs

Процедура ВыполнитьСкрипт()
    
    Попытка
        Менеджер = Новый МенеджерСпискаИБ();
        СписокБаз = Менеджер.ПолучитьСписок();
        
        МассивБаз = Новый Массив;
        
        Для Каждого База Из СписокБаз Цикл
            
            ИнфоБаза = Новый Структура;
            ИнфоБаза.Вставить("name", База.Имя);
            ИнфоБаза.Вставить("path", База.СтрокаСоединения);
            
            // Получаем размер и дату изменения
            ПутьКБазе = ИзвлечьПутьИзСтрокиСоединения(База.СтрокаСоединения);
            
            Если ПутьКБазе <> "" И ФС.КаталогСуществует(ПутьКБазе) Тогда
                Размер = ПолучитьРазмерКаталога(ПутьКБазе);
                ДатаИзменения = ПолучитьДатуИзменения(ПутьКБазе);
                
                ИнфоБаза.Вставить("size", Размер);
                ИнфоБаза.Вставить("lastModified", ДатаИзменения);
            Иначе
                ИнфоБаза.Вставить("size", 0);
                ИнфоБаза.Вставить("lastModified", ТекущаяДата());
            КонецЕсли;
            
            Если База.Идентификатор <> Неопределено Тогда
                ИнфоБаза.Вставить("guid", Строка(База.Идентификатор));
            КонецЕсли;
            
            МассивБаз.Добавить(ИнфоБаза);
            
        КонецЦикла;
        
        // Выводим JSON
        JSON = Новый ЗаписьJSON;
        JSON.УстановитьСтроку();
        ЗаписатьJSON(JSON, МассивБаз);
        
        Сообщить(JSON.Закрыть());
        
    Исключение
        Сообщить("Ошибка при получении списка баз: " + ОписаниеОшибки());
        ВызватьИсключение ОписаниеОшибки();
    КонецПопытки;
    
КонецПроцедуры

Функция ИзвлечьПутьИзСтрокиСоединения(СтрокаСоединения)
    
    // Извлекаем путь из строки вида /F"путь" или File="путь"
    РегВыр = Новый РегулярноеВыражение("/F[""']?([^""';]+)[""']?");
    Совпадения = РегВыр.НайтиСовпадения(СтрокаСоединения);
    
    Если Совпадения.Количество() > 0 Тогда
        Возврат Совпадения[0].Группы[1].Значение;
    КонецЕсли;
    
    РегВыр = Новый РегулярноеВыражение("File=[""']?([^""';]+)[""']?");
    Совпадения = РегВыр.НайтиСовпадения(СтрокаСоединения);
    
    Если Совпадения.Количество() > 0 Тогда
        Возврат Совпадения[0].Группы[1].Значение;
    КонецЕсли;
    
    Возврат "";
    
КонецФункции

Функция ПолучитьРазмерКаталога(ПутьККаталогу)
    
    Размер = 0;
    
    Попытка
        Файлы = НайтиФайлы(ПутьККаталогу, ПолучитьМаскуВсеФайлы(), Истина);
        
        Для Каждого Файл Из Файлы Цикл
            Если Не Файл.ЭтоКаталог() Тогда
                Размер = Размер + Файл.Размер();
            КонецЕсли;
        КонецЦикла;
    Исключение
        // Игнорируем ошибки доступа
    КонецПопытки;
    
    Возврат Размер;
    
КонецФункции

Функция ПолучитьДатуИзменения(ПутьККаталогу)
    
    Попытка
        Файл = Новый Файл(ПутьККаталогу);
        Возврат XMLСтрока(Файл.ПолучитьВремяИзменения());
    Исключение
        Возврат XMLСтрока(ТекущаяДата());
    КонецПопытки;
    
КонецФункции

ВыполнитьСкрипт();

