#!/usr/bin/env oscript
// Скрипт для получения списка информационных баз через ParserFileV8i

#Использовать ParserFileV8i
#Использовать fs

Процедура ВыполнитьСкрипт()
    
    МассивБаз = Новый Массив;
    
    Попытка
        // Используем ParserFileV8i для получения списка баз
        Парсер = Новый ПарсерСпискаБаз();
        СписокБаз = Парсер.ПолучитьСписокБаз();
        
        Для Каждого ПараБаза Из СписокБаз Цикл
            
            База = ПараБаза.Значение;
            СтрокаСоединения = База.Connect.String;
            
            // ТОЛЬКО ФАЙЛОВЫЕ БАЗЫ! Пропускаем серверные
            Если СтрНайти(СтрокаСоединения, "Srvr=") > 0 Тогда
                Продолжить;
            КонецЕсли;
            
            // Извлекаем путь из строки подключения
            ПутьКБазе = ИзвлечьПутьИзСтрокиСоединения(СтрокаСоединения);
            
            // Если путь не получили - пропускаем
            Если ПутьКБазе = "" Тогда
                Продолжить;
            КонецЕсли;
            
            ИнфоБаза = Новый Структура;
            ИнфоБаза.Вставить("name", База.Name);
            ИнфоБаза.Вставить("path", ПутьКБазе);
            
            // Получаем размер и дату изменения
            Если ФС.КаталогСуществует(ПутьКБазе) Тогда
                Размер = ПолучитьРазмерКаталога(ПутьКБазе);
                ДатаИзменения = ПолучитьДатуИзменения(ПутьКБазе);
                
                ИнфоБаза.Вставить("size", Размер);
                ИнфоБаза.Вставить("lastModified", ДатаИзменения);
            Иначе
                ИнфоБаза.Вставить("size", 0);
                ИнфоБаза.Вставить("lastModified", XMLСтрока(ТекущаяДата()));
            КонецЕсли;
            
            Если База.Свойство("ID") Тогда
                ИнфоБаза.Вставить("guid", База.ID);
            КонецЕсли;
            
            МассивБаз.Добавить(ИнфоБаза);
            
        КонецЦикла;
        
    Исключение
        // Если ошибка - возвращаем пустой массив
        Сообщить("[]");
        Возврат;
    КонецПопытки;
    
    // Выводим JSON
    JSON = Новый ЗаписьJSON;
    JSON.УстановитьСтроку();
    ЗаписатьJSON(JSON, МассивБаз);
    
    Сообщить(JSON.Закрыть());
    
КонецПроцедуры

Функция ИзвлечьПутьИзСтрокиСоединения(СтрокаСоединения)
    
    // Извлекаем путь из строки вида Connect=File="путь"; 
    
    СтрокаСоединения = СокрЛП(СтрокаСоединения);
    СтрокаФайл = "File=";
    ДлинаСтрокиФайл = 5;
    Если СтрНайти(СтрокаСоединения, СтрокаФайл) > 0 Тогда
        Начало = СтрНайти(СтрокаСоединения, СтрокаФайл);
        Остаток = Сред(СтрокаСоединения, Начало + ДлинаСтрокиФайл);
        
        // Убираем кавычки и точку с запятой
        Остаток = СтрЗаменить(Остаток, """", "");
        Остаток = СтрЗаменить(Остаток, ";", "");
        Остаток = СокрЛП(Остаток);
        
        Возврат Остаток;
    КонецЕсли;
    
    Возврат "";
    
КонецФункции

Функция ПолучитьРазмерКаталога(ПутьККаталогу)
    
    Размер = 0;
    
    Попытка
        Файлы = НайтиФайлы(ПутьККаталогу, ПолучитьМаскуВсеФайлы(), Истина);
        
        Для Каждого Файл Из Файлы Цикл
            Если Не Файл.ЭтоКаталог() Тогда
                Размер = Размер + Файл.Размер();
            КонецЕсли;
        КонецЦикла;
    Исключение
        Возврат Размер;
    КонецПопытки;
    
    Возврат Размер;
    
КонецФункции

Функция ПолучитьДатуИзменения(ПутьККаталогу)
    
    Попытка
        Файл = Новый Файл(ПутьККаталогу);
        Возврат XMLСтрока(Файл.ПолучитьВремяИзменения());
    Исключение
        Возврат XMLСтрока(ТекущаяДата());
    КонецПопытки;
    
КонецФункции

ВыполнитьСкрипт();
