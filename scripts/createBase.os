#!/usr/bin/env oscript
// Скрипт для создания новой информационной базы

#Использовать v8runner
#Использовать cpdb
#Использовать fs

Перем ИмяБазы;
Перем ПутьКБазе;
Перем ТипИсточника;
Перем ПутьИсточника;
Перем ВеткаGit;
Перем РепозиторийGit;
Перем ВерсияПлатформы;

Процедура ВыполнитьСкрипт()
    
    ИндексИмениБазы = 0;
    ИндексПутьКБазе = 1;
    ИндексТипИсточника = 2;
    ИндексПутьИсточника = 3;
    ИндексВерсияПлатформы = 4;
    ИндексВеткиGit = 5;
    ИндексРепозиторияGit = 6;

    // Получаем параметры
    Если АргументыКоманднойСтроки.Количество() < 5 Тогда
        Сообщить("Недостаточно параметров");
        Сообщить("Использование: createBase.os <имя> <путь_к_базе> <тип_источника> <путь_источника> <версия_платформы> [ветка_git] [репозиторий_git]");
        ВызватьИсключение "Недостаточно параметров";
    КонецЕсли;
    
    ИмяБазы = АргументыКоманднойСтроки[ИндексИмениБазы];
    ПутьКБазе = АргументыКоманднойСтроки[ИндексПутьКБазе];
    ТипИсточника = АргументыКоманднойСтроки[ИндексТипИсточника]; // cf, sources, git
    ПутьИсточника = АргументыКоманднойСтроки[ИндексПутьИсточника];
    ВерсияПлатформы = АргументыКоманднойСтроки[ИндексВерсияПлатформы];
    Если АргументыКоманднойСтроки.Количество() > ИндексВеткиGit Тогда
        ВеткаGit = АргументыКоманднойСтроки[ИндексВеткиGit];
    КонецЕсли;
    Если АргументыКоманднойСтроки.Количество() > ИндексРепозиторияGit Тогда
        РепозиторийGit = АргументыКоманднойСтроки[ИндексРепозиторияGit];
    КонецЕсли;
    
    Попытка
        
        // Создаем каталог для базы если не существует
        Если НЕ ФС.КаталогСуществует(ПутьКБазе) Тогда
            ФС.СоздатьКаталог(ПутьКБазе);
        КонецЕсли;
        
        Если ФС.КаталогСуществует(ПутьКБазе) Тогда
            Файлы = НайтиФайлы(ПутьКБазе, "*");
            Если Файлы.Количество() > 0 Тогда
                Сообщить("Каталог базы не пустой: " + ПутьКБазе);
                ВызватьИсключение "Каталог базы уже существует";
            КонецЕсли;
        КонецЕсли;
        
        // Создаем базу и загружаем конфигурацию
        СтрокаСоединения = "/F""" + ПутьКБазе + """";
        
        Сообщить("Создание базы: " + ИмяБазы);
        Сообщить("Путь: " + ПутьКБазе);
        Сообщить("Тип источника: " + ТипИсточника);
        Сообщить("Версия платформы: " + ВерсияПлатформы);
        
        // Инициализируем конфигуратор
        Конфигуратор = Новый УправлениеКонфигуратором();
        Конфигуратор.УстановитьКонтекст(СтрокаСоединения, "", "");
        Конфигуратор.ИспользоватьВерсиюПлатформы(ВерсияПлатформы);
        
        // Создаем пустую базу
        Сообщить("Создание пустой базы...");
        Конфигуратор.СоздатьФайловуюБазу(ПутьКБазе, ВерсияПлатформы, Ложь, "", ИмяБазы);
        
        // Загружаем конфигурацию в зависимости от типа источника
        Если ТипИсточника = "cf" Тогда
            Сообщить("Загрузка конфигурации из .cf файла...");
            Конфигуратор.ЗагрузитьКонфигурациюИзФайла(ПутьИсточника);
            Конфигуратор.ОбновитьКонфигурациюБазыДанных();
            
        ИначеЕсли ТипИсточника = "sources" Тогда
            Сообщить("Загрузка конфигурации из исходников...");
            Конфигуратор.ЗагрузитьКонфигурациюИзФайлов(ПутьИсточника);
            Конфигуратор.ОбновитьКонфигурациюБазыДанных();
            
        ИначеЕсли ТипИсточника = "git" Тогда
            Сообщить("Загрузка конфигурации из Git репозитория...");
            // Для Git используем путь к исходникам в репозитории
            ПутьКИсходникамВРепозитории = ОбъединитьПути(РепозиторийGit, ПутьИсточника);
            
            Если НЕ ФС.КаталогСуществует(ПутьКИсходникамВРепозитории) Тогда
                ВызватьИсключение "Каталог исходников не найден: " + ПутьКИсходникамВРепозитории;
            КонецЕсли;
            
            Конфигуратор.ЗагрузитьКонфигурациюИзФайлов(ПутьКИсходникамВРепозитории);
            Конфигуратор.ОбновитьКонфигурациюБазыДанных();
        Иначе
            ВызватьИсключение "Неизвестный тип источника: " + ТипИсточника;
        КонецЕсли;
        
        Сообщить("База успешно создана: " + ИмяБазы);
        
    Исключение
        ТекстОшибки = ОписаниеОшибки();
        Сообщить("Ошибка создания базы: " + ТекстОшибки);
        ВызватьИсключение ТекстОшибки;
    КонецПопытки;
    
КонецПроцедуры

ВыполнитьСкрипт();